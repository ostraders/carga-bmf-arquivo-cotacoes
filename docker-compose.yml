kafka:
  image: spotify/kafka
  ports:
    - "2181:2181"
    - "9092:9092"
  environment:
    ADVERTISED_HOST: localhost
    ADVERTISED_PORT: 9092
    CONSUMER_THREADS: 1
    TOPICS: candlestick-diario, candlestick-semanal
    ZK_CONNECT: kafka7zookeeper:2181/root/path
    GROUP_ID: bmf
    NUM_PARTITIONS: 100
    KAFKA_PRODUCER_MAX_REQUEST_SIZE: 15728640
    KAFKA_CONSUMER_MAX_REQUEST_SIZE: 15728640
    KAFKA_SERVER_MAX_REQUEST_SIZE: 15728640
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock

pg-dbbmf:
  image: postgres:10.6-alpine
  environment:
    POSTGRES_DB: dbbmf
    POSTGRES_USER: dbbmf
    POSTGRES_PASSWORD: dbbmf
  volumes:
    - /data/sql/:/docker-entrypoint-initdb.d/
  ports:
    - "5432:5432"

pg-calcula-dbbmf:
  image: postgres:10.6-alpine
  environment:
    POSTGRES_DB: calcula_bmf
    POSTGRES_USER: dbbmf
    POSTGRES_PASSWORD: dbbmf
  volumes:
    - /data/sql/:/docker-entrypoint-initdb.d/
  ports:
    - "5433:5432"

# Para CRIAR e INICIALIZAR os containers definidos acima:
# docker-compose up  (esse comando cria e inicia os containers. Caso não queira apendar o processo no console utilizar a opção -d)

# Para verificar os containers rodando:
# docker-compose ps

# Para PARAR os containers
# docker-compose stop

# Para PARAR E REMOVER os containers
# docker-compose down